{"version":3,"file":"index.esm.js","sources":["../../../dist/graphql-cli/coverage/src/index.js"],"sourcesContent":["import { __awaiter } from \"tslib\";\nimport { defineCommand } from '@graphql-cli/common';\nimport { parseGlobalArgs, createInspectorExtension, loaders, } from '@graphql-inspector/graphql-cli-common';\nimport { handler } from '@graphql-inspector/coverage-command';\nexport default defineCommand((api) => {\n    return {\n        command: 'coverage [project]',\n        describe: 'Schema coverage based on documents',\n        builder(yargs) {\n            return yargs\n                .positional('project', {\n                describe: 'Point to a project',\n                type: 'string',\n            })\n                .options({\n                schema: {\n                    describe: 'Point to a schema',\n                    type: 'string',\n                },\n                documents: {\n                    describe: 'Point to operations and fragments',\n                    type: 'string',\n                },\n                write: {\n                    alias: 'w',\n                    describe: 'Write a file with coverage stats',\n                    type: 'string',\n                },\n                silent: {\n                    alias: 's',\n                    describe: 'Do not render any stats in the terminal',\n                    type: 'boolean',\n                },\n                require: {\n                    alias: 'r',\n                    describe: 'Require modules',\n                    type: 'array',\n                },\n                token: {\n                    alias: 't',\n                    describe: 'Access Token',\n                    type: 'string',\n                },\n                header: {\n                    alias: 'h',\n                    describe: 'Http Header',\n                    type: 'array',\n                },\n                config: {\n                    alias: 'c',\n                    type: 'string',\n                    describe: 'Location of GraphQL Config',\n                },\n            });\n        },\n        handler(args) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const writePath = args.write;\n                const silent = args.silent;\n                const { headers, token } = parseGlobalArgs(args);\n                const config = yield api.useConfig({\n                    rootDir: args.config || process.cwd(),\n                    extensions: [createInspectorExtension('coverage')],\n                });\n                if (args.documents && args.schema) {\n                    const { loadDocuments, loadSchema } = api.useLoaders({ loaders });\n                    const schema = yield loadSchema(args.schema, {\n                        headers,\n                        token,\n                    });\n                    const documents = yield loadDocuments(args.documents, {\n                        headers,\n                        token,\n                    });\n                    return handler({ schema, documents, silent, writePath });\n                }\n                const project = config.getProject(args.project);\n                const schema = yield project.getSchema();\n                const documents = yield project.getDocuments();\n                return handler({ schema, documents, silent, writePath });\n            });\n        },\n    };\n});\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}