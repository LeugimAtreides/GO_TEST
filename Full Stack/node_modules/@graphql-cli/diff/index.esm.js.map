{"version":3,"file":"index.esm.js","sources":["../../../dist/graphql-cli/diff/src/index.js"],"sourcesContent":["import { __awaiter } from \"tslib\";\nimport { defineCommand } from '@graphql-cli/common';\nimport { parseGlobalArgs, createInspectorExtension, loaders, } from '@graphql-inspector/graphql-cli-common';\nimport { handler } from '@graphql-inspector/diff-command';\nexport default defineCommand((api) => {\n    return {\n        command: 'diff [source] [target]',\n        describe: 'Compare two GraphQL Schemas',\n        builder(yargs) {\n            return yargs\n                .positional('source', {\n                describe: 'Point to a source schema (or project)',\n                type: 'string',\n            })\n                .positional('target', {\n                describe: 'Point to a target schema (or project)',\n                type: 'string',\n            })\n                .options({\n                rule: {\n                    describe: 'Add rules',\n                    array: true,\n                },\n                onComplete: {\n                    describe: 'Handle Completion',\n                    type: 'string',\n                },\n                require: {\n                    alias: 'r',\n                    describe: 'Require modules',\n                    type: 'array',\n                },\n                token: {\n                    alias: 't',\n                    describe: 'Access Token',\n                    type: 'string',\n                },\n                header: {\n                    alias: 'h',\n                    describe: 'Http Header',\n                    type: 'array',\n                },\n                config: {\n                    alias: 'c',\n                    type: 'string',\n                    describe: 'Location of GraphQL Config',\n                },\n            });\n        },\n        handler(args) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const { headers, token } = parseGlobalArgs(args);\n                const config = yield api.useConfig({\n                    rootDir: args.config || process.cwd(),\n                    extensions: [createInspectorExtension('diff')],\n                });\n                const { loadSchema } = api.useLoaders({ loaders });\n                let baseSchema;\n                let newSchema;\n                if (!args.target) {\n                    // Case 1: <no args>\n                    //    Base schema - `diff` extension\n                    //    New schema - default project\n                    // Case 2: <source>\n                    //    Base schema - `diff` extension\n                    //    New schema - named project\n                    const project = config.getProject(args.source);\n                    baseSchema = yield resolveBaseSchema(project);\n                    newSchema = yield project.getSchema();\n                }\n                else {\n                    // Case 3: <source> <target>\n                    //    Base schema - `project` or `pointer`\n                    //    New schema - `project` or `pointer`\n                    baseSchema = yield resolveSchema(args.source);\n                    newSchema = yield resolveSchema(args.target);\n                }\n                function resolveBaseSchema(project) {\n                    const diffConfig = project.extension('diff');\n                    return project.loadSchema(diffConfig.baseSchema);\n                }\n                function resolveSchema(pointer) {\n                    return !!config.projects[pointer]\n                        ? config.getProject(pointer).getSchema()\n                        : loadSchema(pointer, {\n                            headers,\n                            token,\n                        });\n                }\n                return handler({\n                    oldSchema: baseSchema,\n                    newSchema,\n                    rules: args.rule,\n                    onComplete: args.onComplete,\n                });\n            });\n        },\n    };\n});\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}